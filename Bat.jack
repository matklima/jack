class Bat {

    // Location on the screen
    field int x, y;

    // The width and height
    field int width, height;


    /** Constructs a new bat with the given location and width. */
    constructor Bat new(int Ax, int Ay, int Awidth, int Aheight) {
	let x = Ax;
	let y = Ay;
	let width = Awidth;
	let height = Aheight;

        do draw();

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the bat on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Erases the bat from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + 2, y + 2);
        return;
    }

     method int getLeft() {
        return x;
    }

    /** Returns the right edge of the bat. */
    method int getRight() {
        return x + width;
    }

    /** Moves left by one step */
    method void moveLeft() {
        let x = x - 2;
	    if (x < 0) {
		    let x = 0;
    	}
        do Screen.setColor(false);
        do Screen.drawRectangle((x + width) + 1, y, (x + width) + 2, y + height);
        do Screen.setColor(true);
   	    do Screen.drawRectangle(x, y, x + 3, y + height);
        return;
    }

    /** Moves right by one step */
    method void moveRight() {
        let x = x + 2;
	    if ((x + width) > 511) {
		    let x = 511 - width;
  	    }
        do Screen.setColor(false);
        do Screen.drawRectangle(x - 2, y, x - 1, y + height);
        do Screen.setColor(true);
	    do Screen.drawRectangle((x + width) - 3, y, x + width, y + height);
        return;
    }
}
